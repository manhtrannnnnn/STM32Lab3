
#include "fsm_display.h"

#define INIT 0
#define EN0 1
#define EN1 2
#define EN2 3
#define EN3 4
//state for blink LED fsm
#define LED_ON 1
#define LED_OFF 2
//Time
#define SCANNING_TIME 250
#define BLINK_TIME 500

/* Init ------*/
int statusEn = INIT;
int statusLed = INIT;

/* Function -----*/
//Set restart 7SEG display
void restartDisplay(void) {
  statusEn = INIT;
}
//7SEG LED display
void fsm_display(void) {
  updateBuffer();
  switch(statusEn) {
  case INIT:
    statusEn = EN0;
    setTimer(SCANNING_TIME, enTimer);
    break;
  case EN0:
    EN_on(EN0 - 1);
    display7SEG(SEG_buffer[EN0 - 1]);
    if(isTimerOut(enTimer) == 1) {
      statusEn = EN1;
      setTimer(SCANNING_TIME, enTimer);
    }
    break;
  case EN1:
	EN_on(EN1 - 1);
    display7SEG(SEG_buffer[EN1 - 1]);
	if(isTimerOut(enTimer) == 1) {
	  statusEn = EN2;
	  setTimer(SCANNING_TIME, enTimer);
	}
	break;
  case EN2:
	EN_on(EN2 - 1);
    display7SEG(SEG_buffer[EN2 - 1]);
	if(isTimerOut(enTimer) == 1) {
	  statusEn = EN3;
	  setTimer(SCANNING_TIME, enTimer);
	}
	break;
  case EN3:
	EN_on(EN3 - 1);
    display7SEG(SEG_buffer[EN3 - 1]);
	if(isTimerOut(enTimer) == 1) {
	  statusEn = EN0;
	  setTimer(SCANNING_TIME, enTimer);
	}
	break;
  }
}
//Blinky LED have 'color'
void blinkLED(int color) {
  switch(statusLed) {
  case INIT:
    statusLed = LED_ON;
    setTimer(BLINK_TIME, blinkTimer);
    break;
  case LED_ON:
	LED_on_road1(color);
	LED_on_road2(color);
	if(isTimerOut(blinkTimer) == 1) {
	  statusLed = LED_OFF;
	  setTimer(BLINK_TIME, blinkTimer);
	}
	break;
  case LED_OFF:
	LED_off();
	if(isTimerOut(blinkTimer) == 1) {
	  statusLed = LED_ON;
	  setTimer(BLINK_TIME, blinkTimer);
	}
	break;
  }
}
